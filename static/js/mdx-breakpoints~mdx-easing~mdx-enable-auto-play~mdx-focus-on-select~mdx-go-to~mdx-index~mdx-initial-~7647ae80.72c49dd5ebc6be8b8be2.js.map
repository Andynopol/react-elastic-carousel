{"version":3,"sources":["webpack:///./src/docs/components/Item.js","webpack:///./src/docs/components/SimpleItem.js","webpack:///./src/react-elastic-carousel/utils/helpers.js","webpack:///./src/react-elastic-carousel/components/styled/Button.js","webpack:///./src/react-elastic-carousel/components/styled/ItemWrapper.js","webpack:///./src/react-elastic-carousel/components/styled/SliderContainer.js","webpack:///./src/react-elastic-carousel/components/styled/Slider.js","webpack:///./src/react-elastic-carousel/components/styled/StyledCarousel.js","webpack:///./src/react-elastic-carousel/components/styled/CarouselWrapper.js","webpack:///./src/react-elastic-carousel/consts.js","webpack:///./src/react-elastic-carousel/components/ItemWrapperContainer.js","webpack:///./src/react-elastic-carousel/components/Track.js","webpack:///./src/react-elastic-carousel/components/Arrow.js","webpack:///./src/react-elastic-carousel/actions/consts.js","webpack:///./src/react-elastic-carousel/reducers/items.js","webpack:///./src/react-elastic-carousel/actions/itemsActions.js","webpack:///./src/react-elastic-carousel/components/Pagination/Dot.js","webpack:///./src/react-elastic-carousel/components/Pagination/Pagination.js","webpack:///./src/react-elastic-carousel/components/Carousel.js","webpack:///./src/react-elastic-carousel/index.js"],"names":["Item","styled","div","_templateObject","_ref","active","SimpleItem","SimpleItem_templateObject","maxWidth","noop","numberToArray","n","_toConsumableArray","Array","keys","cssPrefix","className","concat","pipe","_len","arguments","length","fns","_key","x","reduce","v","f","button","attrs","style","padding","width","height","ItemWrapper_templateObject","_ref2","itemPosition","SliderContainer_templateObject","Slider_templateObject","_ref5","verticalMode","_ref4","isSwiping","transitionMs","easing","tiltEasing","effectiveEasing","isRTL","swipedSliderPosition","sliderPosition","_ref3","StyledCarousel_templateObject","CarouselWrapper_templateObject","consts","PREV","NEXT","START","CENTER","END","ItemWrapperContainer","_this$props","_this","props","onClick","id","React","Component","_this$props2","this","child","react_default","a","createElement","ItemWrapper","defaultProps","Track","children","childWidth","enableSwipe","enableMouseSwipe","itemPadding","onSwipedLeft","onSwipedRight","onSwipedUp","onSwipedDown","onItemClick","paddingStyle","join","originalChildren","Children","map","idx","item","components_ItemWrapperContainer","key","Swipeable_default","stopPropagation","preventDefaultTouchmoveEvent","trackMouse","Fragment","directionIcons","left","right","up","down","arrowClassname","Arrow","direction","icons","rest","_objectWithoutProperties","arrows","_objectSpread","styleObj","rotate","transform","rotateStyle","Button","Object","assign","cx","firstItemReducer","state","action","limit","itemsToScroll","type","optimisticNextItem","optimisticPrevItem","nextItemAction","prevItemAction","Dot","Dot_templateObject","DotContainer","Indicators","Pagination_templateObject","Pagination","numOfPages","activePage","pages","i","Pagination_Dot","Carousel","rootHeight","rootWidth","childHeight","transitioning","firstItem","initialFirstItem","sliderContainerWidth","name","ref","ro","ResizeObserver","entries","observer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","entry","value","target","sliderContainer","onContainerResize","slider","onSliderResize","err","return","observe","disconnect","autoPlaySpeed","autoPlayIntervalId","setInterval","slideNext","clearInterval","fn","addEventListener","removeEventListener","breakPoints","itemsToShow","currentBreakPoint","slice","reverse","find","bp","visibleItems","getCurrentBreakpoint","effectiveItemsToScroll","setState","totalItems","numOfVisibleItems","getNumOfVisibleItems","moveBy","emptySlots","newFirstItem","sliderNode","contentRect","nextState","sliderContainerNode","_this$props3","onResize","updateSliderPosition","position","distance","duration","setTimeout","index","currentIndex","getPrev","getItemsToScroll","numOfvisibleItems","notEnoughItemsToshow","nextAction","nextItemIndex","getNextItemIndex","onNextStart","nextItemObj","getNextItemObj","convertChildToCbObj","onPrevStart","slidePrev","enableTilt","_this$state","nextItem","goTo","tiltMoveMent","prevItem","onNextEnd","removeSliderTransitionHook","onPrevEnd","nextItemId","childSize","Carousel_objectSpread","_this$props4","isPrev","nextAvailbaleItem","itemsToshow","noChange","outOfBoundry","Math","max","positionEndCb","stateUpdater","generatePositionUpdater","updateActivePage","onSliderTransitionEnd","ceil","newActivePage","indicatorId","gotoIndex","initResizeObserver","prevProps","prevState","enableAutoPlay","removeAutoPlay","setAutoPlay","unSubscribeObserver","_this$state2","_this$props5","focusOnSelect","pagination","showArrows","renderArrow","renderPagination","getNumOfPages","CarouselWrapper","StyledCarousel","index_es","when","components_Arrow","SliderContainer","setRef","Slider","components_Track","onIndicatorClick","components_Pagination_Pagination","__webpack_require__","d","__webpack_exports__","components_Carousel"],"mappings":"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","file":"static/js/mdx-breakpoints~mdx-easing~mdx-enable-auto-play~mdx-focus-on-select~mdx-go-to~mdx-index~mdx-initial-~7647ae80.115502fd.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Item = styled.div`\r\n  transition: transform 200ms ease;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  padding: 15px;\r\n  margin: 5px;\r\n  border: 1px solid\r\n    ${({ active }) => (active ? \"rgba(0,0,0,.2)\" : \"rgba(0,0,0,.02)\")};\r\n  color: #fff;\r\n  background-color: #673ab7;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default Item;\r\n","import styled from \"styled-components\";\r\nimport Item from \"./Item\";\r\n\r\nconst SimpleItem = styled(Item)`\r\n  font-family: Comic Sans MS, Comic Sans, cursive;\r\n  font-weight: 100;\r\n  display: flex;\r\n  min-height: 100px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 2.5em;\r\n  max-width: ${({ maxWidth }) => maxWidth};\r\n`;\r\n\r\nexport default SimpleItem;\r\n","export const noop = () => {};\r\n\r\nexport const numberToArray = n => [...Array(n).keys()];\r\n\r\nexport const cssPrefix = className => `rec rec-${className}`;\r\n\r\nexport const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x);\r\n\r\nexport const throttle = (func, limit) => {\r\n  let lastFunc;\r\n  let lastRan;\r\n  return function() {\r\n    const context = this;\r\n    const args = arguments;\r\n    if (!lastRan) {\r\n      func.apply(context, args);\r\n      lastRan = Date.now();\r\n    } else {\r\n      clearTimeout(lastFunc);\r\n      lastFunc = setTimeout(function() {\r\n        if (Date.now() - lastRan >= limit) {\r\n          func.apply(context, args);\r\n          lastRan = Date.now();\r\n        }\r\n      }, limit - (Date.now() - lastRan));\r\n    }\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.button`\r\n  transition: all 0.3s ease;\r\n  font-size: 1.6em;\r\n  background-color: rgba(103, 58, 183, 0.1);\r\n  color: #333;\r\n  box-shadow: 0 0 2px 0px #333;\r\n  border-radius: 50%;\r\n  border: none;\r\n  width: 50px;\r\n  height: 50px;\r\n  min-width: 50px;\r\n  line-height: 50px;\r\n  align-self: center;\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    color: #fff;\r\n    background-color: rgba(103, 58, 183, 1);\r\n    box-shadow: 0 0 2px 0px #333;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div.attrs({\r\n  style: ({ padding, width, height }) => ({ padding, width, height })\r\n})`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  overflow: hidden;\r\n  user-select: none;\r\n  justify-content: ${({ itemPosition }) => itemPosition};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  overflow: hidden;\r\n  position: relative;\r\n  width: 100%;\r\n  margin: 0 10px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst calcLeft = ({\r\n  isRTL,\r\n  verticalMode,\r\n  isSwiping,\r\n  swipedSliderPosition,\r\n  sliderPosition\r\n}) => {\r\n  if (verticalMode || isRTL) {\r\n    return \"auto\";\r\n  } else {\r\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\r\n  }\r\n};\r\n\r\nconst calcRight = ({\r\n  isRTL,\r\n  verticalMode,\r\n  isSwiping,\r\n  swipedSliderPosition,\r\n  sliderPosition\r\n}) => {\r\n  if (!verticalMode && isRTL) {\r\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\r\n  } else {\r\n    return \"auto\";\r\n  }\r\n};\r\n\r\nconst calcTop = ({\r\n  verticalMode,\r\n  isSwiping,\r\n  swipedSliderPosition,\r\n  sliderPosition\r\n}) => {\r\n  if (!verticalMode) {\r\n    return \"auto\";\r\n  } else {\r\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\r\n  }\r\n};\r\n\r\nconst calcTransition = ({ isSwiping, transitionMs, easing, tiltEasing }) => {\r\n  const duration = isSwiping ? 250 : transitionMs;\r\n  const effectiveEasing = isSwiping ? tiltEasing : easing;\r\n  return `all ${duration}ms ${effectiveEasing}`;\r\n};\r\n\r\nexport default styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: ${({ verticalMode }) => (verticalMode ? \"column\" : \"row\")};\r\n  min-height: 100%;\r\n  transition: ${calcTransition};\r\n  left: ${calcLeft};\r\n  right: ${calcRight};\r\n  top: ${calcTop};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: ${({ height }) => `${height}px`};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  direction: ${({ isRTL }) => (isRTL ? \"rtl\" : \"ltr\")};\r\n`;\r\n","export default {\r\n  PREV: \"PREV\",\r\n  NEXT: \"NEXT\",\r\n  START: \"flex-start\",\r\n  CENTER: \"center\",\r\n  END: \"flex-end\"\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ItemWrapper } from \"./styled\";\r\nimport consts from \"../consts\";\r\nimport { noop, cssPrefix } from \"../utils/helpers\";\r\n\r\nclass ItemWrapperContainer extends React.Component {\r\n  onClick = () => {\r\n    const { onClick, id } = this.props;\r\n    onClick(id);\r\n  };\r\n  render() {\r\n    const { child, style, itemPosition } = this.props;\r\n    return (\r\n      <ItemWrapper\r\n        onClick={this.onClick}\r\n        className={cssPrefix(\"item-wrapper\")}\r\n        itemPosition={itemPosition}\r\n        style={style}\r\n      >\r\n        {child}\r\n      </ItemWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nItemWrapperContainer.defaultProps = {\r\n  style: {},\r\n  itemPosition: consts.CENTER,\r\n  onClick: noop\r\n};\r\n\r\nItemWrapperContainer.propTypes = {\r\n  child: PropTypes.element.isRequired,\r\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END]),\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  style: PropTypes.object,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default ItemWrapperContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Swipeable from \"react-swipeable\";\r\nimport { cssPrefix } from \"../utils/helpers\";\r\nimport ItemWrapperContainer from \"./ItemWrapperContainer\";\r\n\r\nconst Track = ({\r\n  children,\r\n  childWidth,\r\n  enableSwipe,\r\n  enableMouseSwipe,\r\n  itemPosition,\r\n  itemPadding,\r\n  onSwipedLeft,\r\n  onSwipedRight,\r\n  onSwipedUp,\r\n  onSwipedDown,\r\n  onItemClick\r\n}) => {\r\n  const width = `${childWidth}px`;\r\n  const paddingStyle = `${itemPadding.join(\"px \")}px`;\r\n  let originalChildren = React.Children.map(children, (child, idx) => {\r\n    const item = (\r\n      <ItemWrapperContainer\r\n        id={idx}\r\n        itemPosition={itemPosition}\r\n        child={child}\r\n        style={{ width, padding: paddingStyle }}\r\n        key={`${child.key}${idx}`}\r\n        onClick={onItemClick}\r\n      />\r\n    );\r\n    if (enableSwipe) {\r\n      return (\r\n        <Swipeable\r\n          stopPropagation\r\n          preventDefaultTouchmoveEvent\r\n          trackMouse={enableMouseSwipe}\r\n          onSwipedLeft={onSwipedLeft}\r\n          onSwipedRight={onSwipedRight}\r\n          onSwipedUp={onSwipedUp}\r\n          onSwipedDown={onSwipedDown}\r\n          className={cssPrefix(`swipable-${child.key}`)}\r\n        >\r\n          {item}\r\n        </Swipeable>\r\n      );\r\n    } else {\r\n      return item;\r\n    }\r\n  });\r\n  return <React.Fragment>{originalChildren}</React.Fragment>;\r\n};\r\n\r\nTrack.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n  itemPosition: PropTypes.string,\r\n  itemPadding: PropTypes.array,\r\n  childWidth: PropTypes.number,\r\n  enableSwipe: PropTypes.bool,\r\n  enableMouseSwipe: PropTypes.bool,\r\n  onSwipedLeft: PropTypes.func,\r\n  onSwipedRight: PropTypes.func,\r\n  onSwipedUp: PropTypes.func,\r\n  onSwipedDown: PropTypes.func,\r\n  onItemClick: PropTypes.func\r\n};\r\n\r\nexport default Track;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\nimport { cssPrefix } from \"../utils/helpers\";\r\nimport { Button } from \"./styled\";\r\n\r\nconst directionIcons = {\r\n  left: \"❮\",\r\n  right: \"❯\",\r\n  up: \"❮\",\r\n  down: \"❯\"\r\n};\r\n\r\nconst arrowClassname = cssPrefix(\"arrow\");\r\n\r\nconst rotateStyle = direction => {\r\n  let rotate = {};\r\n  if (direction === Arrow.up || direction === Arrow.down) {\r\n    rotate.transform = \"rotate(90deg)\";\r\n  }\r\n  return rotate;\r\n};\r\nconst Arrow = ({ direction, onClick, icons, style, ...rest }) => {\r\n  const arrows = { ...directionIcons, ...icons };\r\n  const styleObj = {\r\n    ...rotateStyle(direction),\r\n    ...style\r\n  };\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      className={cx(arrowClassname, `${arrowClassname}-${direction}`)}\r\n      style={styleObj}\r\n      {...rest}\r\n    >\r\n      {arrows[direction]}\r\n    </Button>\r\n  );\r\n};\r\n\r\nArrow.left = \"left\";\r\nArrow.right = \"right\";\r\nArrow.up = \"up\";\r\nArrow.down = \"down\";\r\n\r\nArrow.propTypes = {\r\n  direction: PropTypes.oneOf([\"left\", \"right\", \"up\", \"down\"]).isRequired,\r\n  icons: PropTypes.object,\r\n  style: PropTypes.object,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default Arrow;\r\n","export const NEXT_ITEM = \"NEXT_ITEM\";\r\nexport const PREV_ITEM = \"PREV_ITEM\";\r\n","import { NEXT_ITEM, PREV_ITEM } from \"../actions/consts\";\r\n\r\nexport const firstItemReducer = (state, action) => {\r\n  const { limit, itemsToScroll, type } = action;\r\n  switch (type) {\r\n    case NEXT_ITEM: {\r\n      let optimisticNextItem = state + itemsToScroll;\r\n      const nextItem = limit >= optimisticNextItem ? optimisticNextItem : limit;\r\n      return nextItem;\r\n    }\r\n\r\n    case PREV_ITEM: {\r\n      let optimisticPrevItem = state - itemsToScroll;\r\n      const prevItem = optimisticPrevItem >= limit ? optimisticPrevItem : limit;\r\n      return prevItem;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { NEXT_ITEM, PREV_ITEM } from \"./consts\";\r\n\r\nexport const nextItemAction = (limit, itemsToScroll) => ({\r\n  type: NEXT_ITEM,\r\n  limit,\r\n  itemsToScroll\r\n});\r\n\r\nexport const prevItemAction = (limit, itemsToScroll) => ({\r\n  type: PREV_ITEM,\r\n  limit,\r\n  itemsToScroll\r\n});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { cssPrefix } from \"../../utils/helpers\";\r\n\r\nconst boxShadow = \"0 0 1px 2px rgba(0, 0, 0, 0.5)\";\r\nconst activeBoxShadow = \"0 0 1px 3px rgba(103,58,183,1)\";\r\nconst hoveredBoxShadow = \"0 0 1px 3px rgba(103,58,183,.5)\";\r\n\r\nconst Dot = styled.div`\r\n  transition: all 250ms ease;\r\n  margin: 5px;\r\n  background-color: ${({ active }) =>\r\n    active ? \"rgba(103,58,183,.5)\" : \"transparent\"};\r\n  font-size: 1.3em;\r\n  content: \"\";\r\n  height: 10px;\r\n  width: 10px;\r\n  box-shadow: ${({ active }) => (active ? activeBoxShadow : boxShadow)};\r\n  border-radius: 50%;\r\n  &:hover {\r\n    cursor: pointer;\r\n    box-shadow: ${({ active }) =>\r\n      active ? activeBoxShadow : hoveredBoxShadow};\r\n  }\r\n`;\r\n\r\nclass DotContainer extends React.Component {\r\n  onClick = () => {\r\n    const { onClick, id } = this.props;\r\n    onClick(id);\r\n  };\r\n  render() {\r\n    const { active } = this.props;\r\n    return (\r\n      <Dot\r\n        onClick={this.onClick}\r\n        active={active}\r\n        className={`${cssPrefix(\"dot\")} ${\r\n          active ? cssPrefix(\"dot_active\") : \"\"\r\n        }`}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nDotContainer.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  active: PropTypes.bool,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default DotContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Dot from \"./Dot\";\r\nimport { numberToArray, cssPrefix, noop } from \"../../utils/helpers\";\r\n\r\nconst Indicators = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 15px;\r\n`;\r\n\r\nclass Pagination extends React.Component {\r\n  render() {\r\n    const { numOfPages, activePage, onClick } = this.props;\r\n    const pages = numberToArray(numOfPages);\r\n    return (\r\n      <Indicators className={cssPrefix(\"pagination\")}>\r\n        {pages.map((item, i) => (\r\n          <Dot key={i} id={i} active={i === activePage} onClick={onClick} />\r\n        ))}\r\n      </Indicators>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.defaultProps = {\r\n  onClick: noop\r\n};\r\n\r\nPagination.propTypes = {\r\n  numOfPages: PropTypes.number.isRequired,\r\n  activePage: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\nimport Only from \"react-only-when\";\r\nimport Track from \"./Track\";\r\nimport Arrow from \"./Arrow\";\r\nimport consts from \"../consts\";\r\nimport { firstItemReducer } from \"../reducers/items\";\r\nimport { nextItemAction, prevItemAction } from \"../actions/itemsActions\";\r\nimport {\r\n  SliderContainer,\r\n  Slider,\r\n  StyledCarousel,\r\n  CarouselWrapper\r\n} from \"./styled\";\r\nimport { pipe, noop, cssPrefix, numberToArray } from \"../utils/helpers\";\r\nimport { Pagination } from \"./Pagination\";\r\n\r\nclass Carousel extends React.Component {\r\n  state = {\r\n    rootHeight: 0,\r\n    rootWidth: 0,\r\n    childWidth: 0,\r\n    childHeight: 0,\r\n    sliderPosition: 0,\r\n    swipedSliderPosition: 0,\r\n    isSwiping: false,\r\n    transitioning: false,\r\n    firstItem: this.props.initialFirstItem,\r\n    activePage: 0,\r\n    sliderContainerWidth: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initResizeObserver();\r\n    this.updateActivePage();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { enableAutoPlay } = this.props;\r\n    const { firstItem } = this.state;\r\n    const nextItem = this.getNextItemIndex(firstItem, false);\r\n\r\n    // autoplay update\r\n    if (firstItem === nextItem) {\r\n      this.removeAutoPlay();\r\n    } else if (enableAutoPlay && !this.autoPlayIntervalId) {\r\n      this.setAutoPlay();\r\n    } else if (!enableAutoPlay && this.autoPlayIntervalId) {\r\n      this.removeAutoPlay();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unSubscribeObserver();\r\n  }\r\n\r\n  setRef = name => ref => (this[name] = ref);\r\n\r\n  initResizeObserver = () => {\r\n    this.ro = new ResizeObserver((entries, observer) => {\r\n      for (const entry of entries) {\r\n        if (entry.target === this.sliderContainer) {\r\n          this.onContainerResize(entry);\r\n        }\r\n        if (entry.target === this.slider) {\r\n          this.onSliderResize(entry);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.ro.observe(this.sliderContainer);\r\n    this.ro.observe(this.slider);\r\n  };\r\n\r\n  unSubscribeObserver = () => this.ro.disconnect();\r\n\r\n  setAutoPlay = () => {\r\n    const { autoPlaySpeed } = this.props;\r\n    this.autoPlayIntervalId = setInterval(() => {\r\n      const { transitioning } = this.state;\r\n      if (!transitioning) {\r\n        this.slideNext();\r\n      }\r\n    }, autoPlaySpeed);\r\n  };\r\n\r\n  removeAutoPlay = () => {\r\n    if (this.autoPlayIntervalId) {\r\n      clearInterval(this.autoPlayIntervalId);\r\n      this.autoPlayIntervalId = null;\r\n    }\r\n  };\r\n\r\n  onSliderTransitionEnd = fn => {\r\n    this.slider.addEventListener(\"transitionend\", fn);\r\n  };\r\n\r\n  removeSliderTransitionHook = fn => {\r\n    this.slider.removeEventListener(\"transitionend\", fn);\r\n  };\r\n\r\n  getCurrentBreakpoint = () => {\r\n    const { breakPoints, itemsToShow, itemsToScroll } = this.props;\r\n    const { sliderContainerWidth } = this.state;\r\n\r\n    // default breakpoint from individual props\r\n    let currentBreakPoint = { itemsToScroll, itemsToShow };\r\n\r\n    // if breakpoints were added as props override the individual props\r\n    if (breakPoints && breakPoints.length > 0) {\r\n      currentBreakPoint = breakPoints\r\n        .slice() // no mutations\r\n        .reverse() // so we can find last match\r\n        .find(bp => bp.width <= sliderContainerWidth);\r\n      if (!currentBreakPoint) {\r\n        /* in case we don't have a lower width than sliderContainerWidth\r\n        * this mostly happens in initilization when sliderContainerWidth is 0\r\n        */\r\n        currentBreakPoint = breakPoints[0];\r\n      }\r\n    }\r\n    return currentBreakPoint;\r\n  };\r\n\r\n  getNumOfVisibleItems = () => {\r\n    const { itemsToShow } = this.props;\r\n    let visibleItems = itemsToShow;\r\n\r\n    const currentBreakPoint = this.getCurrentBreakpoint();\r\n    if (currentBreakPoint) {\r\n      visibleItems = currentBreakPoint.itemsToShow;\r\n    }\r\n    return visibleItems;\r\n  };\r\n\r\n  getItemsToScroll = () => {\r\n    const { itemsToScroll } = this.props;\r\n    const currentBreakPoint = this.getCurrentBreakpoint();\r\n    let effectiveItemsToScroll = itemsToScroll;\r\n    if (currentBreakPoint && currentBreakPoint.itemsToScroll) {\r\n      effectiveItemsToScroll = currentBreakPoint.itemsToScroll;\r\n    }\r\n    return effectiveItemsToScroll;\r\n  };\r\n\r\n  updateSliderPosition = () => {\r\n    this.setState((state, props) => {\r\n      const { children, verticalMode } = props;\r\n      const { childWidth, childHeight, firstItem } = state;\r\n      const totalItems = children.length;\r\n      const numOfVisibleItems = this.getNumOfVisibleItems();\r\n      const hiddenSlots = totalItems - numOfVisibleItems;\r\n      let moveBy = firstItem * -1;\r\n      const emptySlots = numOfVisibleItems - (totalItems - firstItem);\r\n      if (emptySlots > 0 && hiddenSlots > 0) {\r\n        moveBy = emptySlots + firstItem * -1;\r\n      }\r\n      let sliderPosition = (verticalMode ? childHeight : childWidth) * moveBy;\r\n      const newFirstItem = emptySlots > 0 ? firstItem - emptySlots : firstItem;\r\n      return {\r\n        sliderPosition,\r\n        firstItem: newFirstItem < 0 ? 0 : newFirstItem\r\n      };\r\n    });\r\n  };\r\n\r\n  onSliderResize = sliderNode => {\r\n    const { verticalMode, children } = this.props;\r\n    const { height } = sliderNode.contentRect;\r\n    const nextState = {};\r\n    if (verticalMode) {\r\n      const numOfVisibleItems = this.getNumOfVisibleItems();\r\n      const childHeight = height / children.length;\r\n      nextState.rootHeight = childHeight * numOfVisibleItems;\r\n      nextState.childHeight = childHeight;\r\n    } else {\r\n      nextState.rootHeight = height;\r\n    }\r\n    this.setState(nextState);\r\n  };\r\n\r\n  onContainerResize = sliderContainerNode => {\r\n    const { onResize, verticalMode } = this.props;\r\n    const { width } = sliderContainerNode.contentRect;\r\n    // update slider container width\r\n    this.setState({ sliderContainerWidth: width }, () => {\r\n      /* based on slider container's width, get num of items to show\r\n      * and calculate child's width (and update it in state)\r\n      */\r\n      const visibleItems = this.getNumOfVisibleItems();\r\n      const childWidth = verticalMode ? width : width / visibleItems;\r\n      this.setState(\r\n        state => ({ childWidth }),\r\n        () => {\r\n          /* Based on all of the above new data:\r\n          * update slider position\r\n          * get the new current breakpoint\r\n          * pass the current breakpoint to the consumer's callback\r\n          */\r\n          this.updateSliderPosition();\r\n          const currentBreakPoint = this.getCurrentBreakpoint();\r\n          onResize(currentBreakPoint);\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  tiltMoveMent = (position, distance = 20, duration = 150) => {\r\n    this.setState(state => {\r\n      return {\r\n        isSwiping: true,\r\n        swipedSliderPosition: position - distance\r\n      };\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isSwiping: false,\r\n        swipedSliderPosition: 0\r\n      });\r\n    }, duration);\r\n  };\r\n\r\n  convertChildToCbObj = index => {\r\n    const { children } = this.props;\r\n    const child = children[index];\r\n    return { item: child.props, index };\r\n  };\r\n\r\n  getNextItemIndex = (currentIndex, getPrev) => {\r\n    const { children } = this.props;\r\n    const itemsToScroll = this.getItemsToScroll();\r\n    const numOfvisibleItems = this.getNumOfVisibleItems();\r\n    const notEnoughItemsToshow = numOfvisibleItems > children.length;\r\n    let limit = getPrev ? 0 : children.length - numOfvisibleItems;\r\n\r\n    if (notEnoughItemsToshow) {\r\n      limit = 0; // basically don't move\r\n    }\r\n    const nextAction = getPrev\r\n      ? prevItemAction(0, itemsToScroll)\r\n      : nextItemAction(limit, itemsToScroll);\r\n    const nextItem = firstItemReducer(currentIndex, nextAction);\r\n    return nextItem;\r\n  };\r\n\r\n  getNextItemObj = getPrev => {\r\n    const { children } = this.props;\r\n    const { firstItem } = this.state;\r\n    const nextItemIndex = this.getNextItemIndex(firstItem, getPrev);\r\n    const asElement = children[nextItemIndex];\r\n    const asObj = { item: asElement.props, index: nextItemIndex };\r\n    return asObj;\r\n  };\r\n\r\n  onNextStart = () => {\r\n    const { onNextStart } = this.props;\r\n    const { firstItem } = this.state;\r\n    const nextItemObj = this.getNextItemObj();\r\n    const prevItemObj = this.convertChildToCbObj(firstItem);\r\n    onNextStart(prevItemObj, nextItemObj);\r\n    this.slideNext();\r\n  };\r\n\r\n  onPrevStart = () => {\r\n    const { onPrevStart } = this.props;\r\n    const { firstItem } = this.state;\r\n    const nextItemObj = this.getNextItemObj(true);\r\n    const prevItemObj = this.convertChildToCbObj(firstItem);\r\n    onPrevStart(prevItemObj, nextItemObj);\r\n    this.slidePrev();\r\n  };\r\n\r\n  slideNext = () => {\r\n    const { enableTilt } = this.props;\r\n    const { firstItem, sliderPosition } = this.state;\r\n    const nextItem = this.getNextItemIndex(firstItem, false);\r\n    if (firstItem !== nextItem) {\r\n      this.goTo(nextItem);\r\n    } else if (enableTilt) {\r\n      this.tiltMoveMent(sliderPosition, 20, 150);\r\n    }\r\n  };\r\n\r\n  slidePrev = () => {\r\n    const { firstItem } = this.state;\r\n    const { enableTilt } = this.props;\r\n    const prevItem = this.getNextItemIndex(firstItem, true);\r\n    if (firstItem !== prevItem) {\r\n      this.goTo(prevItem);\r\n    } else if (enableTilt) {\r\n      this.tiltMoveMent(0, -20, 150);\r\n    }\r\n  };\r\n\r\n  onNextEnd = () => {\r\n    const { onNextEnd } = this.props;\r\n    const { firstItem } = this.state;\r\n    const nextItemObj = this.convertChildToCbObj(firstItem);\r\n    this.removeSliderTransitionHook(this.onNextEnd);\r\n    this.setState({ transitioning: false });\r\n    onNextEnd(nextItemObj);\r\n  };\r\n\r\n  onPrevEnd = () => {\r\n    const { onPrevEnd } = this.props;\r\n    const { firstItem } = this.state;\r\n    const nextItemObj = this.convertChildToCbObj(firstItem);\r\n    this.removeSliderTransitionHook(this.onPrevEnd);\r\n    this.setState({ transitioning: false });\r\n    onPrevEnd(nextItemObj);\r\n  };\r\n\r\n  generatePositionUpdater = (\r\n    direction,\r\n    nextItemId,\r\n    verticalMode,\r\n    rest\r\n  ) => state => {\r\n    const { sliderPosition, childWidth, childHeight, firstItem } = state;\r\n    let newSliderPosition = 0;\r\n    const childSize = verticalMode ? childHeight : childWidth;\r\n    if (direction === consts.NEXT) {\r\n      newSliderPosition = sliderPosition - childSize * (nextItemId - firstItem);\r\n    } else {\r\n      newSliderPosition = sliderPosition + childSize * (firstItem - nextItemId);\r\n    }\r\n\r\n    return {\r\n      sliderPosition: newSliderPosition,\r\n      firstItem: nextItemId,\r\n      swipedSliderPosition: 0,\r\n      isSwiping: false,\r\n      ...rest\r\n    };\r\n  };\r\n\r\n  goTo = nextItemId => {\r\n    const { children, verticalMode } = this.props;\r\n    const { firstItem } = this.state;\r\n    const isPrev = firstItem > nextItemId;\r\n    const nextAvailbaleItem = this.getNextItemIndex(firstItem, isPrev);\r\n    const itemsToshow = this.getNumOfVisibleItems();\r\n    const noChange = nextAvailbaleItem === firstItem;\r\n    const outOfBoundry = nextItemId + itemsToshow >= children.length;\r\n    if (noChange) {\r\n      return;\r\n    }\r\n    if (outOfBoundry) {\r\n      if (children.length - itemsToshow > 0) {\r\n        nextItemId = children.length - itemsToshow;\r\n      } else {\r\n        nextItemId = Math.max(\r\n          children.length - 1,\r\n          children.length - itemsToshow\r\n        );\r\n      }\r\n    }\r\n    let direction = consts.NEXT;\r\n    let positionEndCb = this.onNextEnd;\r\n    if (isPrev) {\r\n      direction = consts.PREV;\r\n      positionEndCb = this.onPrevEnd;\r\n    }\r\n    const stateUpdater = this.generatePositionUpdater(\r\n      direction,\r\n      nextItemId,\r\n      verticalMode,\r\n      {\r\n        transitioning: true\r\n      }\r\n    );\r\n    this.setState(stateUpdater, () => {\r\n      // callback\r\n      pipe(\r\n        this.updateActivePage(),\r\n        this.onSliderTransitionEnd(positionEndCb)\r\n      );\r\n    });\r\n  };\r\n\r\n  getNumOfPages = () => {\r\n    const { children } = this.props;\r\n    const numOfVisibleItems = this.getNumOfVisibleItems();\r\n    const numOfPages = Math.ceil(children.length / numOfVisibleItems);\r\n    return numOfPages || 1;\r\n  };\r\n\r\n  updateActivePage = () => {\r\n    this.setState(state => {\r\n      const { firstItem, activePage } = state;\r\n      const numOfVisibleItems = this.getNumOfVisibleItems();\r\n      const newActivePage = Math.ceil(firstItem / numOfVisibleItems);\r\n      if (activePage !== newActivePage) {\r\n        return { activePage: newActivePage };\r\n      }\r\n    });\r\n  };\r\n\r\n  onIndicatorClick = indicatorId => {\r\n    const numOfVisibleItems = this.getNumOfVisibleItems();\r\n    const gotoIndex = indicatorId * numOfVisibleItems;\r\n    this.setState({ activePage: indicatorId });\r\n    this.goTo(gotoIndex);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      childWidth,\r\n      activePage,\r\n      isSwiping,\r\n      sliderPosition,\r\n      swipedSliderPosition,\r\n      rootHeight\r\n    } = this.state;\r\n    const {\r\n      className,\r\n      style,\r\n      verticalMode,\r\n      isRTL,\r\n      easing,\r\n      tiltEasing,\r\n      transitionMs,\r\n      children,\r\n      focusOnSelect,\r\n      itemPosition,\r\n      itemPadding,\r\n      enableSwipe,\r\n      enableMouseSwipe,\r\n      pagination,\r\n      showArrows,\r\n      renderArrow,\r\n      renderPagination\r\n    } = this.props;\r\n    const onSwipedLeft = verticalMode\r\n      ? noop\r\n      : isRTL\r\n        ? this.onPrevStart\r\n        : this.onNextStart;\r\n    const onSwipedRight = verticalMode\r\n      ? noop\r\n      : isRTL\r\n        ? this.onNextStart\r\n        : this.onPrevStart;\r\n    const onSwipedUp = verticalMode ? this.onNextStart : noop;\r\n    const onSwipedDown = verticalMode ? this.onPrevStart : noop;\r\n    const numOfPages = this.getNumOfPages();\r\n\r\n    return (\r\n      <CarouselWrapper\r\n        isRTL={isRTL}\r\n        className={`${cssPrefix(\"carousel-wrapper\")} ${className}`}\r\n        style={style}\r\n      >\r\n        <StyledCarousel className={cssPrefix(\"carousel\")} height={rootHeight}>\r\n          <Only when={showArrows}>\r\n            {renderArrow ? (\r\n              renderArrow({ type: consts.PREV, onClick: this.onPrevStart })\r\n            ) : (\r\n              <Arrow\r\n                onClick={this.onPrevStart}\r\n                direction={verticalMode ? Arrow.up : Arrow.left}\r\n              />\r\n            )}\r\n          </Only>\r\n          <SliderContainer\r\n            className={cssPrefix(\"slider-container\")}\r\n            ref={this.setRef(\"sliderContainer\")}\r\n          >\r\n            <Slider\r\n              verticalMode={verticalMode}\r\n              isRTL={isRTL}\r\n              easing={easing}\r\n              sliderPosition={sliderPosition}\r\n              swipedSliderPosition={swipedSliderPosition}\r\n              isSwiping={isSwiping}\r\n              transitionMs={transitionMs}\r\n              tiltEasing={tiltEasing}\r\n              className={cssPrefix(\"slider\")}\r\n              ref={this.setRef(\"slider\")}\r\n            >\r\n              <Track\r\n                children={children}\r\n                childWidth={childWidth}\r\n                itemPosition={itemPosition}\r\n                itemPadding={itemPadding}\r\n                enableSwipe={enableSwipe}\r\n                enableMouseSwipe={enableMouseSwipe}\r\n                onSwipedLeft={onSwipedLeft}\r\n                onSwipedRight={onSwipedRight}\r\n                onSwipedUp={onSwipedUp}\r\n                onSwipedDown={onSwipedDown}\r\n                onItemClick={focusOnSelect ? this.goTo : undefined}\r\n              />\r\n            </Slider>\r\n          </SliderContainer>\r\n          <Only when={showArrows}>\r\n            {renderArrow ? (\r\n              renderArrow({ type: consts.NEXT, onClick: this.onNextStart })\r\n            ) : (\r\n              <Arrow\r\n                onClick={this.onNextStart}\r\n                direction={verticalMode ? Arrow.down : Arrow.right}\r\n              />\r\n            )}\r\n          </Only>\r\n        </StyledCarousel>\r\n        <Only when={pagination}>\r\n          {renderPagination ? (\r\n            renderPagination({\r\n              pages: numberToArray(numOfPages),\r\n              activePage,\r\n              onClick: this.onIndicatorClick\r\n            })\r\n          ) : (\r\n            <Pagination\r\n              numOfPages={numOfPages}\r\n              activePage={activePage}\r\n              onClick={this.onIndicatorClick}\r\n            />\r\n          )}\r\n        </Only>\r\n      </CarouselWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nCarousel.defaultProps = {\r\n  className: \"\",\r\n  style: {},\r\n  verticalMode: false,\r\n  isRTL: false,\r\n  initialFirstItem: 0,\r\n  showArrows: true,\r\n  pagination: true,\r\n  easing: \"ease\",\r\n  tiltEasing: \"ease\",\r\n  transitionMs: 500,\r\n  enableTilt: true,\r\n  enableSwipe: true,\r\n  enableMouseSwipe: true,\r\n  focusOnSelect: false,\r\n  itemsToShow: 1,\r\n  itemsToScroll: 1,\r\n  itemPosition: consts.CENTER,\r\n  itemPadding: [0, 0, 0, 0],\r\n  enableAutoPlay: false,\r\n  autoPlaySpeed: 2000,\r\n\r\n  // callbacks\r\n  onNextEnd: noop,\r\n  onPrevEnd: noop,\r\n  onNextStart: noop,\r\n  onPrevStart: noop,\r\n  onResize: noop\r\n};\r\n\r\nCarousel.propTypes = {\r\n  /** Items to render */\r\n  children: PropTypes.node.isRequired,\r\n\r\n  /** The css class for the root element */\r\n  className: PropTypes.string,\r\n\r\n  /** The style object for the root element */\r\n  style: PropTypes.object,\r\n\r\n  /** Display the Carousel in a vertical layout */\r\n  verticalMode: PropTypes.bool,\r\n\r\n  /** Flip right to left */\r\n  isRTL: PropTypes.bool,\r\n\r\n  /** Show dots for paging */\r\n  pagination: PropTypes.bool,\r\n\r\n  /** Animation speed */\r\n  transitionMs: PropTypes.number,\r\n\r\n  /** transition easing pattern */\r\n  easing: PropTypes.string,\r\n\r\n  /** transition easing pattern for the tilt */\r\n  tiltEasing: PropTypes.string,\r\n\r\n  /** The \"bump\" animation when reaching the last item */\r\n  enableTilt: PropTypes.bool,\r\n\r\n  /** Number of visible items  */\r\n  itemsToShow: PropTypes.number,\r\n\r\n  /** Number of items to scroll */\r\n  itemsToScroll: PropTypes.number,\r\n\r\n  /** Collection of objects with a width, itemsToShow and itemsToScroll  */\r\n  breakPoints: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      width: PropTypes.number,\r\n      itemsToShow: PropTypes.number,\r\n      itemsToScroll: PropTypes.number\r\n    })\r\n  ),\r\n\r\n  /** The first items when the component mounts */\r\n  initialFirstItem: PropTypes.number,\r\n\r\n  /** Show the arrow buttons */\r\n  showArrows: PropTypes.bool,\r\n\r\n  /** Go to item on click */\r\n  focusOnSelect: PropTypes.bool,\r\n\r\n  /** A render prop for the arrow component\r\n   * - ({type, onClick}) => <div onClick={onClick}>{type === 'prev' ? '<-' : '->'}</div>\r\n   */\r\n  renderArrow: PropTypes.func,\r\n\r\n  /** A render prop for the pagination component\r\n   * - ({ pages, activePage, onClick }) =>  <YourComponent/>\r\n   */\r\n  renderPagination: PropTypes.func,\r\n\r\n  /** Position the element relative to it's wrapper (use the consts object) - consts.START | consts.CENTER | consts.END */\r\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END]),\r\n\r\n  /** A padding for each element  */\r\n  itemPadding: PropTypes.array,\r\n\r\n  // swipe\r\n  /** Enable or disable swipe */\r\n  enableSwipe: PropTypes.bool,\r\n\r\n  /** Enable or disable mouse swipe */\r\n  enableMouseSwipe: PropTypes.bool,\r\n\r\n  // auto play\r\n  /** Enable or disable auto play */\r\n  enableAutoPlay: PropTypes.bool,\r\n\r\n  /** Set auto play speed (ms) */\r\n  autoPlaySpeed: PropTypes.number,\r\n\r\n  // callbacks\r\n  /** A callback for the begining of the next transition\r\n   * - onNextStart(prevItemObj, nextItemObj) => {} */\r\n  onNextStart: PropTypes.func,\r\n\r\n  /** A callback for the begining of the prev transition\r\n   * - onPrevStart(prevItemObj, nextItemObj) => {} */\r\n  onPrevStart: PropTypes.func,\r\n\r\n  /** A callback for the end of the next transition\r\n   * - onNextEnd(nextItemObj) => {} */\r\n  onNextEnd: PropTypes.func,\r\n\r\n  /** A callback for the end of the prev transition\r\n   * - onPrevEnd(nextItemObj) => {} */\r\n  onPrevEnd: PropTypes.func,\r\n\r\n  /** A callback for the \"slider-container\" resize\r\n   * - onResize(currentBreakPoint) => {} */\r\n  onResize: PropTypes.func\r\n};\r\n\r\nexport default Carousel;\r\n","export { default } from \"./components/Carousel\";\r\nexport { default as consts } from \"./consts\";\r\n"],"sourceRoot":""}