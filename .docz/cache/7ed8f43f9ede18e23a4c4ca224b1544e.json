{"remainingRequest":"C:\\Users\\sagiv\\github_cloned_projects\\react-elastic-carousel\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false}],\"@babel/preset-react\",[\"C:\\\\Users\\\\sagiv\\\\github_cloned_projects\\\\react-elastic-carousel\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",\"C:\\\\Users\\\\sagiv\\\\github_cloned_projects\\\\react-elastic-carousel\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!C:\\Users\\sagiv\\github_cloned_projects\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\Arrow.js","dependencies":[{"path":"C:\\Users\\sagiv\\github_cloned_projects\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\Arrow.js","mtime":1536150888948},{"path":"C:\\Users\\sagiv\\github_cloned_projects\\react-elastic-carousel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536153526282},{"path":"C:\\Users\\sagiv\\github_cloned_projects\\react-elastic-carousel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"C:\\\\Users\\\\sagiv\\\\github_cloned_projects\\\\react-elastic-carousel\\\\src\\\\react-elastic-carousel\\\\components\\\\Arrow.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { cssPrefix } from \"../utils/helpers\";\nimport { Button } from \"./styled\";\nvar directionIcons = {\n  left: \"❮\",\n  right: \"❯\",\n  up: \"↑\",\n  down: \"↓\"\n};\nvar arrowClassname = cssPrefix(\"arrow\");\n\nvar Arrow = function Arrow(_ref) {\n  var direction = _ref.direction,\n      onClick = _ref.onClick,\n      icons = _ref.icons,\n      rest = _objectWithoutProperties(_ref, [\"direction\", \"onClick\", \"icons\"]);\n\n  var arrows = _objectSpread({}, directionIcons, icons);\n\n  return React.createElement(Button, Object.assign({\n    onClick: onClick,\n    className: cx(arrowClassname, \"\".concat(arrowClassname, \"-\").concat(direction))\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), arrows[direction]);\n};\n\nArrow.propTypes = {\n  direction: PropTypes.oneOf([\"left\", \"right\", \"up\", \"down\"]).isRequired,\n  icons: PropTypes.object,\n  onClick: PropTypes.func\n};\nvar _default = Arrow;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(directionIcons, \"directionIcons\", \"C:\\\\Users\\\\sagiv\\\\github_cloned_projects\\\\react-elastic-carousel\\\\src\\\\react-elastic-carousel\\\\components\\\\Arrow.js\");\n  reactHotLoader.register(arrowClassname, \"arrowClassname\", \"C:\\\\Users\\\\sagiv\\\\github_cloned_projects\\\\react-elastic-carousel\\\\src\\\\react-elastic-carousel\\\\components\\\\Arrow.js\");\n  reactHotLoader.register(Arrow, \"Arrow\", \"C:\\\\Users\\\\sagiv\\\\github_cloned_projects\\\\react-elastic-carousel\\\\src\\\\react-elastic-carousel\\\\components\\\\Arrow.js\");\n  reactHotLoader.register(_default, \"default\", \"C:\\\\Users\\\\sagiv\\\\github_cloned_projects\\\\react-elastic-carousel\\\\src\\\\react-elastic-carousel\\\\components\\\\Arrow.js\");\n  leaveModule(module);\n})();\n\n;\nArrow.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Arrow\",\n  \"props\": {\n    \"direction\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"left\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"right\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"up\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"down\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"icons\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["C:\\Users\\sagiv\\github_cloned_projects\\react-elastic-carousel\\src\\react-elastic-carousel\\components\\Arrow.js"],"names":["React","PropTypes","cx","cssPrefix","Button","directionIcons","left","right","up","down","arrowClassname","Arrow","direction","onClick","icons","rest","arrows","propTypes","oneOf","isRequired","object","func"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAE,GADe;AAErBC,EAAAA,KAAK,EAAE,GAFc;AAGrBC,EAAAA,EAAE,EAAE,GAHiB;AAIrBC,EAAAA,IAAI,EAAE;AAJe,CAAvB;AAOA,IAAMC,cAAc,GAAGP,SAAS,CAAC,OAAD,CAAhC;;AAEA,IAAMQ,KAAK,GAAG,SAARA,KAAQ,OAA4C;AAAA,MAAzCC,SAAyC,QAAzCA,SAAyC;AAAA,MAA9BC,OAA8B,QAA9BA,OAA8B;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAXC,IAAW;;AACxD,MAAMC,MAAM,qBAAQX,cAAR,EAA2BS,KAA3B,CAAZ;;AACA,SACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAED,OADX;AAEE,IAAA,SAAS,EAAEX,EAAE,CAACQ,cAAD,YAAoBA,cAApB,cAAsCE,SAAtC;AAFf,KAGMG,IAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGC,MAAM,CAACJ,SAAD,CALT,CADF;AASD,CAXD;;AAaAD,KAAK,CAACM,SAAN,GAAkB;AAChBL,EAAAA,SAAS,EAAEX,SAAS,CAACiB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,IAAlB,EAAwB,MAAxB,CAAhB,EAAiDC,UAD5C;AAEhBL,EAAAA,KAAK,EAAEb,SAAS,CAACmB,MAFD;AAGhBP,EAAAA,OAAO,EAAEZ,SAAS,CAACoB;AAHH,CAAlB;eAMeV,K;AAAf;;;;;;;;;;;;0BA5BMN,c;0BAOAK,c;0BAEAC,K","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\nimport { cssPrefix } from \"../utils/helpers\";\r\nimport { Button } from \"./styled\";\r\n\r\nconst directionIcons = {\r\n  left: \"❮\",\r\n  right: \"❯\",\r\n  up: \"↑\",\r\n  down: \"↓\"\r\n};\r\n\r\nconst arrowClassname = cssPrefix(\"arrow\");\r\n\r\nconst Arrow = ({ direction, onClick, icons, ...rest }) => {\r\n  const arrows = { ...directionIcons, ...icons };\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      className={cx(arrowClassname, `${arrowClassname}-${direction}`)}\r\n      {...rest}\r\n    >\r\n      {arrows[direction]}\r\n    </Button>\r\n  );\r\n};\r\n\r\nArrow.propTypes = {\r\n  direction: PropTypes.oneOf([\"left\", \"right\", \"up\", \"down\"]).isRequired,\r\n  icons: PropTypes.object,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default Arrow;\r\n"]}]}